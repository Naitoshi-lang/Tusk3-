import numpy as np

supply = np.array([500, 1000, 900])  
demand = np.array([1200, 1000, 1000, 1000])  

cost = np.array([
    [600, 1100, 1000, 900],  # ЕКБ
    [700, 400, 1000, 900],  # СПБ
    [500, 1000, 900, 800]  # МСК
])
allocation = np.zeros(cost.shape)
def least_cost_method(supply, demand, cost):
    supply_remaining = supply.copy()
    demand_remaining = demand.copy()
    for _ in range(len(supply) * len(demand)):
     
        min_cost_index = np.unravel_index(np.argmin(cost), cost.shape)
        i, j = min_cost_index
   
        quantity = min(supply_remaining[i], demand_remaining[j])
       
        allocation[i, j] = quantity

        supply_remaining[i] -= quantity
        demand_remaining[j] -= quantity
 
        if supply_remaining[i] == 0:
            cost[i, :] = np.inf
     
        if demand_remaining[j] == 0:
            cost[:, j] = np.inf
    return allocation
allocation = least_cost_method(supply, demand, cost)
F = np.sum(allocation * cost)


print("Распределение грузов:")
print(allocation)

print(f"Целевая функция F = {F}")
